alias: Morning Report
sequence:
  - action: todo.get_items
    metadata: {}
    data:
      status: needs_action
    response_variable: chore_list
    target:
      entity_id: todo.chores
  - action: weather.get_forecasts
    metadata: {}
    data:
      type: daily
    target:
      device_id: 9bdacd0d05f68f09cc87f284a7e4811c
    response_variable: weather
  - action: calendar.get_events
    metadata: {}
    data:
      duration:
        hours: 24
        minutes: 0
        seconds: 0
      start_date_time: "{{ today_at().strftime('%Y-%m-%d %H:%M') }}"
    target:
      entity_id: calendar.hofma_dresu
    response_variable: events
  - action: ha_text_ai.clear_history
    metadata: {}
    data:
      instance: sensor.ha_text_ai_openai_llm
  - variables:
      question: >
        *Time of day*  {%- if now().hour < 12 %}
          morning
        {% elif now().hour < 16 %}
          afternoon
        {% elif now().hour < 20 %}
          evening
        {% else %}
          night
        {%- endif %}

        *Weather*
          High: {{weather['weather.openweathermap'].forecast[0].temperature}} F
        Low: {{weather['weather.openweathermap'].forecast[0].templow}} F

        Condition: {{weather['weather.openweathermap'].forecast[0].condition}}

        Precipitation:
        {{weather['weather.openweathermap'].forecast[0].precipitation}}

        Precipitation Chance:
        {{weather['weather.openweathermap'].forecast[0].precipitation_probability}}

        *Calendar* {{'\n'}} {% for ev in events['calendar.hofma_dresu'].events
        -%}
          {{ev.summary}} {%- if 'T' in ev.start %} at {{':'.join(ev.start.split('T')[1].split('-')[0].split(':', 2)[:2])}}{% endif -%}
          {{'\n'}}
        {%- endfor %}

        {% set chorelist_items = chore_list['todo.chores']['items'] | list %} 

        {% set should_show_chores = chorelist_items | count > 0 %}

        {%- if now().weekday() == 1 or should_show_chores %}
          *Chores*
          {{'\n'}}
          {%- if now().weekday() == 1 %}
            {%- if states.input_boolean.recycling_at_next_trash.state == "on" %}
              take out trash, recycling, and yard waste
            {% else %}
              take out trash
            {% endif -%}
          {% endif -%}
          {%- if should_show_chores %}
            {% for chore in chorelist_items -%}
              {{chore.summary}}
              {{'\n'}}
            {%- endfor %}
          {% endif -%}
        {% endif -%}
  - stop: testing
    enabled: false
  - action: ha_text_ai.ask_question
    metadata: {}
    data:
      temperature: 0.7
      max_tokens: 1000
      instance: sensor.ha_text_ai_openai_llm
      question: "{{question}}"
      system_prompt: |-
        You are a radio reporter from the 1920s
        You summarize the information you're given in the style of a news report
        You state times in 24 hour format
        You state temperatures in fahrenheit
        You use old-timey coloquialisms
    enabled: true
  - delay:
      hours: 0
      minutes: 0
      seconds: 5
      milliseconds: 0
    enabled: true
  - variables:
      message: "{{ state_attr('sensor.ha_text_ai_openai_llm', 'response') }}"
      messageArray: |-
        {{message.split('
        ')}}
  - repeat:
      sequence:
        - variables:
            isEmpty: "{{repeat.item == ''}}"
            isNotEmpty: "{{repeat.item != ''}}"
        - if:
            - condition: template
              value_template: "{{ isNotEmpty }}"
          then:
            - alias: TTS Speak
              if:
                - condition: template
                  value_template: >-
                    {{ repeat.item.split(' ') | length <
                    states.sensor.eleven_labs_remaining_character_count.state  |
                    int}}
              then:
                - action: tts.speak
                  metadata: {}
                  data:
                    cache: true
                    media_player_entity_id: media_player.home_assistant_voice_091b0c_media_player
                    message: "{{ repeat.item }}"
                    options:
                      voice: ttLooivY93OUNiBcvW5R
                  target:
                    entity_id: tts.elevenlabs
                  enabled: true
              else:
                - action: tts.speak
                  metadata: {}
                  data:
                    cache: true
                    media_player_entity_id: media_player.home_assistant_voice_091b0c_media_player
                    message: "{{ repeat.item }}"
                  target:
                    entity_id: tts.home_assistant_cloud
                  enabled: true
            - wait_template: >-
                {{is_state('media_player.home_assistant_voice_091b0c_media_player',
                'playing')}}
              continue_on_timeout: false
            - wait_template: >-
                {{is_state('media_player.home_assistant_voice_091b0c_media_player',
                'idle')}}
              continue_on_timeout: false
      for_each: "{{messageArray}}"
description: ""
icon: mdi:radio-tower
