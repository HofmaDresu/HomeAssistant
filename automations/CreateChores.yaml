alias: Create chores
description: ""
triggers:
  - trigger: time
    at: "05:00:00"
conditions: []
actions:
  - alias: Get completed chores
    action: todo.get_items
    metadata: {}
    data:
      status:
        - completed
    response_variable: completedChores
    target:
      entity_id: todo.chores
  - if:
      - condition: template
        value_template: |-
          {{
              completedChores['todo.chores']['items']|selectattr('summary','search','Replace furnace filter')|list|count
              > 0}}
    then:
      - alias: "Add chore: Clean used furnace filter"
        action: script.add_unique_chore
        metadata: {}
        data:
          chore: Clean used furnace filter
    alias: Clean filter if replacement complete
  - if:
      - condition: template
        value_template: |-
          {{
              completedChores['todo.chores']['items']|selectattr('summary','search','Clean vacuum sensor')|list|count
              > 0}}
    then:
      - action: button.press
        metadata: {}
        data: {}
        target:
          entity_id: button.roborock_s7_maxv_reset_sensor_consumable
    alias: "Vacuum: Reset sensor count if complete"
  - alias: "Vacuum: Reset filter count if complete"
    if:
      - condition: template
        value_template: |-
          {{
              completedChores['todo.chores']['items']|selectattr('summary','search','Replace vacuum filter')|list|count
              > 0}}
    then:
      - action: button.press
        metadata: {}
        data: {}
        target:
          entity_id: button.roborock_s7_maxv_reset_air_filter_consumable
  - alias: "Vacuum: Reset main brush count if complete"
    if:
      - condition: template
        value_template: |-
          {{
              completedChores['todo.chores']['items']|selectattr('summary','search','Replace vacuum main brush')|list|count
              > 0}}
    then:
      - action: button.press
        metadata: {}
        data: {}
        target:
          entity_id: button.roborock_s7_maxv_reset_main_brush_consumable
  - alias: "Vacuum: Reset side brush count if complete"
    if:
      - condition: template
        value_template: |-
          {{
              completedChores['todo.chores']['items']|selectattr('summary','search','Replace vacuum side brush')|list|count
              > 0}}
    then:
      - action: button.press
        metadata: {}
        data: {}
        target:
          entity_id: button.roborock_s7_maxv_reset_side_brush_consumable
  - alias: "Shelfy: Reset filter count if complete"
    if:
      - condition: template
        value_template: |-
          {{
              completedChores['todo.chores']['items']|selectattr('summary','search','Clean Shelfy filter')|list|count
              > 0}}
    then:
      - action: button.press
        metadata: {}
        data: {}
        target:
          entity_id: button.vitesy_shelfy_i_already_washed_the_filter
  - alias: "Shelfy: Reset filter count if complete"
    if:
      - condition: template
        value_template: |-
          {{
              completedChores['todo.chores']['items']|selectattr('summary','search','Clean fridge')|list|count
              > 0}}
    then:
      - action: button.press
        metadata: {}
        data: {}
        target:
          entity_id: button.vitesy_shelfy_i_already_cleaned_my_fridge
  - action: todo.remove_completed_items
    metadata: {}
    data: {}
    target:
      entity_id: todo.chores
  - delay:
      hours: 0
      minutes: 5
      seconds: 0
      milliseconds: 0
  - action: todo.get_items
    metadata: {}
    data:
      status: needs_action
    response_variable: chores
    target:
      entity_id: todo.chores
  - if:
      - condition: template
        value_template: "{{ now().day == 3 and now().month == 1 }}"
    then:
      - action: script.add_unique_chore
        metadata: {}
        data:
          chore: Refill emergency water
    alias: "Add chore: refill emergency water"
  - alias: Add monthy chores
    if:
      - condition: template
        value_template: "{{ now().day == 1 }}"
    then:
      - action: script.add_unique_chore
        metadata: {}
        data:
          chore: Set up next month's meals on wheels
        alias: "Add chore: Set up next month's meals on wheels"
      - action: script.add_unique_chore
        metadata: {}
        data:
          chore: Water and feed plant
        alias: "Add chore: Water and feed plant"
      - alias: "Add chore: Pay bills"
        action: script.add_unique_chore
        metadata: {}
        data:
          chore: Pay bills
      - alias: "Add chore: Check blood pressure"
        action: script.add_unique_chore
        metadata: {}
        data:
          chore: Check blood pressure
      - alias: "Add chore: Empty vacuum bag"
        action: script.add_unique_chore
        metadata: {}
        data:
          chore: Empty vacuum bag
  - alias: "Add chore: clean washer"
    if:
      - condition: numeric_state
        entity_id: sensor.washer_tub_clean_counter
        above: 29
    then:
      - action: script.add_unique_chore
        metadata: {}
        data:
          chore: Clean washer
  - alias: "Add chore: Replace furnace filter"
    if:
      - condition: template
        value_template: "{{ now().day == 1 and now().month % 3 == 1}}"
    then:
      - alias: "Add chore: Replace furnace filter"
        action: script.add_unique_chore
        metadata: {}
        data:
          chore: Replace furnace filter
  - if:
      - condition: and
        conditions:
          - condition: time
            weekday:
              - mon
              - thu
              - sat
          - condition: state
            entity_id: input_boolean.hummingbird_feeder_out
            state: "on"
    then:
      - alias: "Add chore: Refresh hummingbird liquid"
        action: script.add_unique_chore
        metadata: {}
        data:
          chore: Refresh hummingbird liquid
    alias: "Add chore: Refresh hummingbird liquid"
  - alias: "Add chore: Vacuum dock error"
    if:
      - condition: not
        conditions:
          - condition: state
            entity_id: sensor.roborock_s7_maxv_dock_error
            state: ok
          - condition: state
            entity_id: sensor.roborock_s7_maxv_dock_error
            state: unavailable
          - condition: state
            entity_id: sensor.roborock_s7_maxv_dock_error
            state: unknown
    then:
      - alias: "Add chore: Vacuum dock error"
        action: script.add_unique_chore
        metadata: {}
        data:
          chore: >-
            vacuum dock error:
            {{states.sensor.roborock_s7_maxv_dock_error.state}}
  - alias: "Add chore: Clean vacuum sensor"
    if:
      - condition: numeric_state
        entity_id: sensor.roborock_s7_maxv_sensor_time_left
        below: 0
    then:
      - alias: "Add chore: Clean vacuum sensor"
        action: script.add_unique_chore
        metadata: {}
        data:
          chore: Clean vacuum sensor
  - if:
      - condition: numeric_state
        entity_id: sensor.roborock_s7_maxv_filter_time_left
        below: 0
    then:
      - alias: "Add chore: Replace vacuum filter"
        action: script.add_unique_chore
        metadata: {}
        data:
          chore: Replace vacuum filter
    alias: "Add chore: Replace vacuum filter"
  - alias: "Add chore: Replace vacuum main brush"
    if:
      - condition: numeric_state
        entity_id: sensor.roborock_s7_maxv_main_brush_time_left
        below: 0
    then:
      - alias: "Add chore: Replace vacuum main brush"
        action: script.add_unique_chore
        metadata: {}
        data:
          chore: Replace vacuum main brush
  - alias: "Add chore: Replace vacuum side brush"
    if:
      - condition: numeric_state
        entity_id: sensor.roborock_s7_maxv_side_brush_time_left
        below: 0
    then:
      - alias: "Add chore: Replace vacuum side brush"
        action: script.add_unique_chore
        metadata: {}
        data:
          chore: Replace vacuum side brush
  - alias: "Add chore: Clean basement bathroom"
    if:
      - condition: template
        value_template: "{{ now().day == 1 and now().month % 3 == 1}}"
    then:
      - action: script.add_unique_chore
        metadata: {}
        data:
          chore: Clean basement bathroom
        alias: "Add chore: Clean basement bathroom"
  - alias: "Add chore: Clean Shelfy filter"
    if:
      - condition: numeric_state
        entity_id: sensor.vitesy_shelfy_remaining_filter_cleaning_days
        below: 1
    then:
      - action: script.add_unique_chore
        metadata: {}
        data:
          chore: Clean Shelfy filter
  - alias: "Add chore: Clean fridge"
    if:
      - condition: numeric_state
        entity_id: sensor.vitesy_shelfy_remaining_fridge_cleaning_days
        below: 1
    then:
      - action: script.add_unique_chore
        metadata: {}
        data:
          chore: Clean fridge
  - alias: Low battery chores
    sequence:
      - variables:
          lowPowerBatteries: >-
            {% set batteryList = states.sensor | selectattr('name', 'match',
            '.*[Bb]attery.*') | rejectattr('name', 'match', '.*[Pp]hone.*') |
            rejectattr('name', 'match', '.*Roborock .*') | rejectattr('name',
            'match', '.*Mo99.*') | rejectattr('name', 'match', 'Front Door
            Motion Sensor Battery') %} {% set emptyBatteryList = batteryList |
            selectattr('state', 'eq', 'unavailable') %} {% set lowBatteryList =
            batteryList | rejectattr('state', 'eq', 'unavailable') %} {% set
            data = namespace(batteryData=[]) %} {%- for lb in emptyBatteryList
            %} {% set data.batteryData = data.batteryData + [{"name": lb.name,
            "batteryLevel": 0}] %} {% endfor -%} {%- for lb in lowBatteryList %}
            {% set data.batteryData = data.batteryData + [{"name": lb.name,
            "batteryLevel": lb.state|float}] %} {% endfor -%} {{
            data.batteryData | rejectattr('batteryLevel', 'gt', 80) |
            map(attribute='name') | list }}
      - repeat:
          sequence:
            - action: script.add_unique_chore
              metadata: {}
              data:
                chore: Replace {{repeat.item}}
          for_each: "{{lowPowerBatteries}}"
mode: single
